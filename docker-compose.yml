# üê≥ Docker Compose for MMF Sigil
# Linux-only deployment with security best practices

version: '3.8'

services:
  mmf-sigil:
    build:
      context: .
      dockerfile: Dockerfile.linux-only
    container_name: mmf-sigil
    restart: unless-stopped
    
    # Security: non-root user, read-only filesystem where possible
    user: "1000:1000"
    read_only: false  # Set to true if no file writes needed
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    
    # Environment variables
    environment:
      - RUST_LOG=info
      - RUST_BACKTRACE=0  # Disable in production
      - MMF_SIGIL_ENV=production
    
    # Volume mounts for persistent data
    volumes:
      - sigil_data:/app/data:rw
      - sigil_logs:/app/logs:rw
      - sigil_config:/app/config:ro
      # Mount config files if needed
      # - ./config:/app/config:ro
    
    # Network configuration
    ports:
      - "8080:8080"  # Main API
      - "9090:9090"  # Metrics (if using Prometheus)
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Security options
    security_opt:
      - no-new-privileges:true
      - seccomp:unconfined  # Adjust based on security requirements
    
    # Capabilities (minimal)
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    
    # Logging
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    # Networks
    networks:
      - sigil-network

  # Optional: Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: sigil-prometheus
    restart: unless-stopped
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - sigil-network
    profiles:
      - monitoring

  # Optional: Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: sigil-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Change in production
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - sigil-network
    profiles:
      - monitoring

# Named volumes for persistent data
volumes:
  sigil_data:
    driver: local
  sigil_logs:
    driver: local
  sigil_config:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

# Custom network for service communication
networks:
  sigil-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
